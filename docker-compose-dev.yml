version: "3.7"
services:
  web:
    build:
      context: .
      dockerfile: ./docker/django/prod/Dockerfile.dev
    container_name: web1
    ports:
      - "8000:80"
    hostname: web
    volumes:
      - media_volume:/home/aaas/media
      - ./:/home/aaas
    env_file:
      - ${ENV_FILE}
    depends_on:
      - postgres
      - redis
    networks:
      - aaas_net

  celery:
    build:
      context: .
      dockerfile: ./docker/django/prod/Dockerfile.celery
    container_name: celery
    hostname: web
    volumes:
      - media_volume:/home/aaas/media
    env_file:
      - ${ENV_FILE}
    depends_on:
      - postgres
      - redis
    networks:
      - aaas_net

  postgres:
    image: postgres:13.6-alpine3.15
    container_name: postgres1
    hostname: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_recover:/var/lib/postgresql/data
    env_file:
      - ${ENV_FILE}
    networks:
      - aaas_net

  redis:
    build:
      context: .
      dockerfile: ./docker/redis/Dockerfile
    container_name: redis1
    hostname: redis
    volumes:
      - redis_data:/data
    networks:
      - aaas_net
  
  flask:
    build:
      context: .
      dockerfile: ./docker/flask/Dockerfile
    container_name: flask1
    ports:
      - "5000:5000"
    hostname: flask1
    env_file:
      - ${ENV_FILE}
    depends_on:
      - postgres
      - redis
    networks:
      - aaas_net

  chrome:
      image: selenium/standalone-chrome:latest
      hostname: chrome
      networks:
        - aaas_net
      privileged: true
      shm_size: 2g

networks:
  aaas_net:

volumes:
  postgres_data_recover:
  redis_data:
  media_volume:
